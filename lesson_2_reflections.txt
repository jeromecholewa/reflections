$$ What happens when you initialize a repository? Why do you need to do it?
- I get a message stating that I "initialized" a repository (whether it was empty or not)
- and it creates a .git directory in that directory, which will track all the changes

$$ How is the staging area different from the working directory and the repository? What value do you think it offers?
- the staging area is a buffer where I select all the files I want to commit together
- the working directory is the place where I work and make change. I can even put files in that directory that I kee untracked (I will not commit them)
- the repository has all the files and their history of the changes whenever I committed them

$$ How can you use the staging area to make sure you have one commit per logical change?
- As soon as I do a significant change I add the file into the staging area by using git add... That way I know that the file is staged and will be committed next.

$$ What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- if we want to create a special version of a file while keeping the original easily available, then branching makes sense
- if we want to try out some new features but we are not sure we need them in the final version, then branching makes sense.